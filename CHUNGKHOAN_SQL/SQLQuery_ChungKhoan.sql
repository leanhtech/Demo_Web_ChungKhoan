 USE master
 GO

 CREATE DATABASE CHUNGKHOAN
 GO

 USE CHUNGKHOAN
 GO

 ALTER DATABASE CHUNGKHOAN SET ENABLE_BROKER WITH ROLLBACK IMMEDIATE
 GO
 
 CREATE TABLE THONGTINCP
 (
	ID NCHAR(7) PRIMARY KEY,
	TENCP NVARCHAR(60)
 )
 GO

 INSERT dbo.THONGTINCP
 (
     ID,
     TENCP
 )
 VALUES
 (   N'ACB', -- ID - nchar(7)
     N'NGÂN HÀNG TMCP Á CHÂU'  -- TENCP - nvarchar(20)
     )

INSERT dbo.THONGTINCP
(
    ID,
    TENCP
)
VALUES
(   N'BID', -- ID - nchar(7)
    N'NGÂN HÀNG TMCP ĐẦU TƯ VÀ PHÁT TRIỂN VIỆT NAM'  -- TENCP - nvarchar(20)
    )

INSERT dbo.THONGTINCP
(
    ID,
    TENCP
)
VALUES
(   N'MBB', -- ID - nchar(7)
    N'NGÂN HÀNG TMCP QUÂN ĐỘI'  -- TENCP - nvarchar(20)
    )

ALTER TABLE dbo.THONGTINCP ALTER COLUMN TENCP VARCHAR(60)

CREATE TABLE LENHDAT
(
	ID INT PRIMARY KEY IDENTITY,
	MACP NCHAR(7) NOT NULL,
	NGAYDAT DATETIME NOT NULL DEFAULT GETDATE(),
	LOAIGD NCHAR(1) NOT NULL,
	LOAILENH NCHAR(10) NOT NULL,
	SOLUONG INT NOT NULL,
	GIADAT FLOAT NOT NULL,
	TRANGTHAILENH NVARCHAR(30) NOT NULL DEFAULT N'Chưa Khớp'
)
GO

ALTER TABLE dbo.LENHDAT ADD CONSTRAINT FK_MACP FOREIGN KEY(MACP) REFERENCES dbo.THONGTINCP(ID)
GO


CREATE TABLE LENHKHOP
(
	IDKHOP INT PRIMARY KEY IDENTITY,
	NGAYKHOP DATETIME DEFAULT GETDATE(),
	SOLUONGKHOP INT NOT NULL,
	GIAKHOP FLOAT NOT NULL,
	IDLENHDAT INT NOT NULL
)
GO

ALTER TABLE dbo.LENHKHOP ADD CONSTRAINT FK_IDLENHDAT FOREIGN KEY(IDLENHDAT) REFERENCES dbo.LENHDAT(ID)
GO

CREATE TABLE BANGGIATT
(
	MACP NCHAR(7) NOT NULL,
	GIA_M_BA INT NOT NULL DEFAULT 0,
	KL_M_BA INT NOT NULL DEFAULT 0,
	GIA_M_HAI INT NOT NULL DEFAULT 0,
	KL_M_HAI INT NOT NULL DEFAULT 0,
	GIA_M_MOT INT NOT NULL DEFAULT 0, 
	KL_M_MOT INT NOT NULL DEFAULT 0,
	GIA_KHOP_MOI INT NOT NULL DEFAULT 0,
	KL_KHOP_MOI INT NOT NULL DEFAULT 0,
	GIA_B_MOT INT NOT NULL DEFAULT 0,
	KL_B_MOT INT NOT NULL DEFAULT 0,
	GIA_B_HAI INT NOT NULL DEFAULT 0,
	KL_B_HAI INT NOT NULL DEFAULT 0,
	GIA_B_BA INT NOT NULL DEFAULT 0,
	KL_B_BA INT NOT NULL DEFAULT 0,
	TONG_KL_KHOP INT NOT NULL DEFAULT 0
)
GO

ALTER TABLE dbo.BANGGIATT ADD CONSTRAINT FK_MACP_BGTT FOREIGN KEY(MACP) REFERENCES dbo.THONGTINCP(ID)
GO

DROP TABLE dbo.BANGGIATT

ALTER PROC TOP_M
@MACP NCHAR(7), @TOP_THU INT,
@KQ_GIA INT OUTPUT, @KQ_KL INT OUTPUT
AS
BEGIN
	
	SELECT TOP (1) @KQ_GIA = GIADAT , @KQ_KL = TONG_KL
	FROM
	(
		SELECT TOP (@TOP_THU) GIADAT, LOAIGD, MACP, SUM(SOLUONG) AS TONG_KL FROM dbo.LENHDAT 
		WHERE LOAIGD = 'M' AND MACP = @MACP
		GROUP BY GIADAT, LOAIGD, MACP
		ORDER BY GIADAT DESC
	) TEMP
	ORDER BY GIADAT
END
GO


ALTER PROC TOP_B
@MACP NCHAR(7), @TOP_THU INT,
@KQ_GIA INT OUTPUT, @KQ_KL INT OUTPUT
AS
BEGIN
	
	SELECT TOP (1) @KQ_GIA = GIADAT , @KQ_KL = TONG_KL
	FROM
	(
		SELECT TOP (@TOP_THU) GIADAT, LOAIGD, MACP, SUM(SOLUONG) AS TONG_KL FROM dbo.LENHDAT 
		WHERE LOAIGD = 'B' AND MACP = @MACP
		GROUP BY GIADAT, LOAIGD, MACP
		ORDER BY GIADAT
	) TEMP
	ORDER BY GIADAT DESC
END
GO

ALTER TRIGGER TR_LENHDAT_INSERT ON dbo.LENHDAT
AFTER INSERT
AS 
BEGIN
	DECLARE @LOAIGD NCHAR(1), @MACP NCHAR(7),@GIA INT, @TRANGTHAI NVARCHAR(30)
	SELECT @LOAIGD=LOAIGD, @MACP = MACP, @GIA = GIADAT, @TRANGTHAI = TRANGTHAILENH FROM Inserted
	IF @MACP NOT IN (SELECT MACP FROM dbo.BANGGIATT)
	BEGIN
	    INSERT dbo.BANGGIATT (MACP) VALUES (@MACP)
	END
	
	IF @LOAIGD = 'M'
	BEGIN
		DECLARE @G_M_1 INT, @KL_M_1 INT, @G_M_2 INT, @KL_M_2 INT, @G_M_3 INT, @KL_M_3 INT
		EXEC TOP_M @MACP, 1, @G_M_1 OUTPUT, @KL_M_1 OUTPUT
		EXEC TOP_M @MACP, 2, @G_M_2 OUTPUT, @KL_M_2 OUTPUT
		EXEC TOP_M @MACP, 3, @G_M_3 OUTPUT, @KL_M_3 OUTPUT
		UPDATE dbo.BANGGIATT SET GIA_M_MOT = @G_M_1, GIA_M_HAI = @G_M_2, GIA_M_BA = @G_M_3, KL_M_MOT = @KL_M_1, KL_M_HAI = @KL_M_2, KL_M_BA = @KL_M_3
		WHERE MACP = @MACP
	END
	ELSE IF @LOAIGD = 'B'
	BEGIN
		DECLARE @G_B_1 INT, @KL_B_1 INT, @G_B_2 INT, @KL_B_2 INT, @G_B_3 INT, @KL_B_3 INT
		EXEC TOP_B @MACP, 1, @G_B_1 OUTPUT, @KL_B_1 OUTPUT
		EXEC TOP_B @MACP, 2, @G_B_2 OUTPUT, @KL_B_2 OUTPUT
		EXEC TOP_B @MACP, 3, @G_B_3 OUTPUT, @KL_B_3 OUTPUT
		UPDATE dbo.BANGGIATT SET GIA_B_MOT = @G_B_1, GIA_B_HAI = @G_B_2, GIA_B_BA = @G_B_3, KL_B_MOT = @KL_B_1, KL_B_HAI = @KL_B_2, KL_B_BA = @KL_B_3
		WHERE MACP = @MACP
	END
	ELSE
	BEGIN
		RAISERROR (N'NHẬP KHÔNG HỢP LỆ',16,10) WITH NOWAIT
		ROLLBACK TRANSACTION
	END
END
GO

ALTER TRIGGER TR_LENHDAT_UPDATE ON dbo.LENHDAT
AFTER UPDATE
AS 
BEGIN
	DECLARE @LOAIGD NCHAR(1), @MACP NCHAR(7),@GIA INT, @TRANGTHAI NVARCHAR(30), @MACP_TRUOC NCHAR(7)
	SELECT @LOAIGD=LOAIGD, @MACP = MACP, @GIA = GIADAT, @TRANGTHAI = TRANGTHAILENH FROM Inserted
	SELECT @MACP_TRUOC = @MACP FROM Deleted

	IF @MACP NOT IN (SELECT MACP FROM dbo.BANGGIATT)
	BEGIN
	    INSERT dbo.BANGGIATT (MACP) VALUES (@MACP)
	END
	
	IF @LOAIGD = 'M'
	BEGIN
		DECLARE @G_M_1 INT, @KL_M_1 INT, @G_M_2 INT, @KL_M_2 INT, @G_M_3 INT, @KL_M_3 INT
		EXEC TOP_M @MACP, 1, @G_M_1 OUTPUT, @KL_M_1 OUTPUT
		EXEC TOP_M @MACP, 2, @G_M_2 OUTPUT, @KL_M_2 OUTPUT
		EXEC TOP_M @MACP, 3, @G_M_3 OUTPUT, @KL_M_3 OUTPUT
		UPDATE dbo.BANGGIATT SET GIA_M_MOT = @G_M_1, GIA_M_HAI = @G_M_2, GIA_M_BA = @G_M_3, KL_M_MOT = @KL_M_1, KL_M_HAI = @KL_M_2, KL_M_BA = @KL_M_3
		WHERE MACP = @MACP
		IF (@MACP <>  @MACP_TRUOC)
		BEGIN
		    EXEC TOP_M @MACP_TRUOC, 1, @G_M_1 OUTPUT, @KL_M_1 OUTPUT
			EXEC TOP_M @MACP_TRUOC, 2, @G_M_2 OUTPUT, @KL_M_2 OUTPUT
			EXEC TOP_M @MACP_TRUOC, 3, @G_M_3 OUTPUT, @KL_M_3 OUTPUT
			UPDATE dbo.BANGGIATT SET GIA_M_MOT = @G_M_1, GIA_M_HAI = @G_M_2, GIA_M_BA = @G_M_3, KL_M_MOT = @KL_M_1, KL_M_HAI = @KL_M_2, KL_M_BA = @KL_M_3
			WHERE MACP = @MACP_TRUOC
		END
	END

	ELSE IF @LOAIGD = 'B'
	BEGIN
		DECLARE @G_B_1 INT, @KL_B_1 INT, @G_B_2 INT, @KL_B_2 INT, @G_B_3 INT, @KL_B_3 INT
		EXEC TOP_B @MACP, 1, @G_B_1 OUTPUT, @KL_B_1 OUTPUT
		EXEC TOP_B @MACP, 2, @G_B_2 OUTPUT, @KL_B_2 OUTPUT
		EXEC TOP_B @MACP, 3, @G_B_3 OUTPUT, @KL_B_3 OUTPUT
		UPDATE dbo.BANGGIATT SET GIA_B_MOT = @G_B_1, GIA_B_HAI = @G_B_2, GIA_B_BA = @G_B_3, KL_B_MOT = @KL_B_1, KL_B_HAI = @KL_B_2, KL_B_BA = @KL_B_3
		WHERE MACP = @MACP
		IF (@MACP <>  @MACP_TRUOC)
		BEGIN
		    EXEC TOP_B @MACP_TRUOC, 1, @G_B_1 OUTPUT, @KL_B_1 OUTPUT
			EXEC TOP_B @MACP_TRUOC, 2, @G_B_2 OUTPUT, @KL_B_2 OUTPUT
			EXEC TOP_B @MACP_TRUOC, 3, @G_B_3 OUTPUT, @KL_B_3 OUTPUT
			UPDATE dbo.BANGGIATT SET GIA_B_MOT = @G_B_1, GIA_B_HAI = @G_B_2, GIA_B_BA = @G_B_3, KL_B_MOT = @KL_B_1, KL_B_HAI = @KL_B_2, KL_B_BA = @KL_B_3
			WHERE MACP = @MACP_TRUOC
		END
	END
	ELSE
	BEGIN
		RAISERROR (N'NHẬP KHÔNG HỢP LỆ',16,10) WITH NOWAIT
		ROLLBACK TRANSACTION
	END
END
GO

ALTER TRIGGER TR_LENHDAT_DELETE ON dbo.LENHDAT
AFTER DELETE
AS
BEGIN
	DECLARE @LOAIGD NCHAR(1), @MACP NCHAR(7)
	SELECT @LOAIGD=LOAIGD, @MACP = MACP FROM Deleted
	IF @MACP NOT IN (SELECT MACP FROM dbo.LENHDAT)
		DELETE FROM dbo.BANGGIATT WHERE MACP = @MACP
	IF @LOAIGD = 'M'
	BEGIN
		DECLARE @G_M_1 INT, @KL_M_1 INT, @G_M_2 INT, @KL_M_2 INT, @G_M_3 INT, @KL_M_3 INT
		EXEC TOP_M @MACP, 1, @G_M_1 OUTPUT, @KL_M_1 OUTPUT
		EXEC TOP_M @MACP, 2, @G_M_2 OUTPUT, @KL_M_2 OUTPUT
		EXEC TOP_M @MACP, 3, @G_M_3 OUTPUT, @KL_M_3 OUTPUT
		UPDATE dbo.BANGGIATT SET GIA_M_MOT = @G_M_1, GIA_M_HAI = @G_M_2, GIA_M_BA = @G_M_3, KL_M_MOT = @KL_M_1, KL_M_HAI = @KL_M_2, KL_M_BA = @KL_M_3
		WHERE MACP = @MACP
	END
	IF @LOAIGD = 'M'
	BEGIN
		DECLARE @G_B_1 INT, @KL_B_1 INT, @G_B_2 INT, @KL_B_2 INT, @G_B_3 INT, @KL_B_3 INT
		EXEC TOP_B @MACP, 1, @G_B_1 OUTPUT, @KL_B_1 OUTPUT
		EXEC TOP_B @MACP, 2, @G_B_2 OUTPUT, @KL_B_2 OUTPUT
		EXEC TOP_B @MACP, 3, @G_B_3 OUTPUT, @KL_B_3 OUTPUT
		UPDATE dbo.BANGGIATT SET GIA_B_MOT = @G_B_1, GIA_B_HAI = @G_B_2, GIA_B_BA = @G_B_3, KL_B_MOT = @KL_B_1, KL_B_HAI = @KL_B_2, KL_B_BA = @KL_B_3
		WHERE MACP = @MACP
	END
END
GO

ALTER PROC THONGTIN_ID
@ID INT, @TONG_KL INT OUTPUT, @MACP NCHAR(7) OUTPUT
AS
BEGIN
    SELECT @MACP = MACP, @TONG_KL = SUM(SOLUONGKHOP) FROM dbo.LENHDAT, dbo.LENHKHOP
	WHERE ID = @ID AND ID = IDLENHDAT
	GROUP BY MACP
END
GO

ALTER TRIGGER TR_LENHKHOP_INSERT ON dbo.LENHKHOP
AFTER INSERT
AS
BEGIN
    DECLARE @IDLENHDAT INT, @KL INT, @GIA INT, @MACP NCHAR(7), @TONG_KL INT
	SELECT @IDLENHDAT = Inserted.IDLENHDAT, @KL = Inserted.SOLUONGKHOP, @GIA = Inserted.GIAKHOP  FROM Inserted
	EXEC THONGTIN_ID @IDLENHDAT, @TONG_KL OUTPUT, @MACP OUTPUT
	UPDATE dbo.BANGGIATT SET GIA_KHOP_MOI = @GIA, KL_KHOP_MOI = @KL, TONG_KL_KHOP = @TONG_KL WHERE MACP = @MACP
END
GO

CREATE TRIGGER TR_LENHKHOP_DELETE ON dbo.LENHKHOP
AFTER DELETE
AS
BEGIN
    DECLARE @IDLENHDAT INT, @KL INT, @GIA INT, @MACP NCHAR(7), @KL_XOA INT, @TONG_KL INT
	SELECT @KL = SOLUONGKHOP, @GIA = GIAKHOP  FROM dbo.LENHKHOP
	SELECT @IDLENHDAT = IDLENHDAT,@KL_XOA = SOLUONGKHOP FROM Deleted
	SELECT @MACP = @MACP FROM dbo.LENHDAT WHERE ID = @IDLENHDAT
	SELECT @TONG_KL = TONG_KL_KHOP FROM dbo.BANGGIATT
	UPDATE dbo.BANGGIATT SET GIA_KHOP_MOI = @GIA, KL_KHOP_MOI = @KL, TONG_KL_KHOP = @TONG_KL - @KL_XOA WHERE MACP = @MACP
END
GO

CREATE TRIGGER TR_LENHKHOP_UPDATE ON dbo.LENHKHOP
AFTER UPDATE
AS
BEGIN
    DECLARE @IDLENHDAT INT, @KL INT, @GIA INT, @MACP NCHAR(7), @TONG_KL INT, @IDLENHDAT_TRUOC INT
	SELECT @IDLENHDAT = Inserted.IDLENHDAT, @KL = Inserted.SOLUONGKHOP, @GIA = Inserted.GIAKHOP  FROM Inserted
	EXEC THONGTIN_ID @IDLENHDAT, @TONG_KL OUTPUT, @MACP OUTPUT
	UPDATE dbo.BANGGIATT SET GIA_KHOP_MOI = @GIA, KL_KHOP_MOI = @KL, TONG_KL_KHOP = @TONG_KL WHERE MACP = @MACP
	SELECT @IDLENHDAT_TRUOC = IDLENHDAT FROM Deleted
	IF @IDLENHDAT <> @IDLENHDAT_TRUOC
	BEGIN
	    SELECT @IDLENHDAT = IDLENHDAT, @KL = SOLUONGKHOP, @GIA = GIAKHOP  FROM Deleted
		EXEC THONGTIN_ID @IDLENHDAT, @TONG_KL OUTPUT, @MACP OUTPUT
		UPDATE dbo.BANGGIATT SET GIA_KHOP_MOI = @GIA, KL_KHOP_MOI = @KL, TONG_KL_KHOP = @TONG_KL WHERE MACP = @MACP
	END
END
GO

INSERT dbo.LENHDAT
(
    MACP,
    NGAYDAT,
    LOAIGD,
    LOAILENH,
    SOLUONG,
    GIADAT,
    TRANGTHAILENH
)
VALUES
(   N'BID',       -- MACP - nchar(7)
    GETDATE(), -- NGAYDAT - datetime
    N'B',       -- LOAIGD - nchar(1)
    N'LO',       -- LOAILENH - nchar(10)
    5,         -- SOLUONG - int
    35,       -- GIADAT - float
    N''        -- TRANGTHAILENH - nvarchar(30)
    )
